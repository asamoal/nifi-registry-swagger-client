/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi_registry.swagger.client.model.Permissions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ResourcePermissions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T16:35:44.644520+02:00[Europe/Berlin]")
public class ResourcePermissions {
  @SerializedName("buckets")
  private Permissions buckets = null;

  @SerializedName("tenants")
  private Permissions tenants = null;

  @SerializedName("policies")
  private Permissions policies = null;

  @SerializedName("proxy")
  private Permissions proxy = null;

  @SerializedName("anyTopLevelResource")
  private Permissions anyTopLevelResource = null;

  public ResourcePermissions buckets(Permissions buckets) {
    this.buckets = buckets;
    return this;
  }

   /**
   * Get buckets
   * @return buckets
  **/
  @Schema(description = "")
  public Permissions getBuckets() {
    return buckets;
  }

  public void setBuckets(Permissions buckets) {
    this.buckets = buckets;
  }

  public ResourcePermissions tenants(Permissions tenants) {
    this.tenants = tenants;
    return this;
  }

   /**
   * Get tenants
   * @return tenants
  **/
  @Schema(description = "")
  public Permissions getTenants() {
    return tenants;
  }

  public void setTenants(Permissions tenants) {
    this.tenants = tenants;
  }

  public ResourcePermissions policies(Permissions policies) {
    this.policies = policies;
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @Schema(description = "")
  public Permissions getPolicies() {
    return policies;
  }

  public void setPolicies(Permissions policies) {
    this.policies = policies;
  }

  public ResourcePermissions proxy(Permissions proxy) {
    this.proxy = proxy;
    return this;
  }

   /**
   * Get proxy
   * @return proxy
  **/
  @Schema(description = "")
  public Permissions getProxy() {
    return proxy;
  }

  public void setProxy(Permissions proxy) {
    this.proxy = proxy;
  }

  public ResourcePermissions anyTopLevelResource(Permissions anyTopLevelResource) {
    this.anyTopLevelResource = anyTopLevelResource;
    return this;
  }

   /**
   * Get anyTopLevelResource
   * @return anyTopLevelResource
  **/
  @Schema(description = "")
  public Permissions getAnyTopLevelResource() {
    return anyTopLevelResource;
  }

  public void setAnyTopLevelResource(Permissions anyTopLevelResource) {
    this.anyTopLevelResource = anyTopLevelResource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourcePermissions resourcePermissions = (ResourcePermissions) o;
    return Objects.equals(this.buckets, resourcePermissions.buckets) &&
        Objects.equals(this.tenants, resourcePermissions.tenants) &&
        Objects.equals(this.policies, resourcePermissions.policies) &&
        Objects.equals(this.proxy, resourcePermissions.proxy) &&
        Objects.equals(this.anyTopLevelResource, resourcePermissions.anyTopLevelResource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buckets, tenants, policies, proxy, anyTopLevelResource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourcePermissions {\n");
    
    sb.append("    buckets: ").append(toIndentedString(buckets)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    anyTopLevelResource: ").append(toIndentedString(anyTopLevelResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
