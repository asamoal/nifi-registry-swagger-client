/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * DeprecationNotice
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T16:35:44.644520+02:00[Europe/Berlin]")
public class DeprecationNotice {
  @SerializedName("reason")
  private String reason = null;

  @SerializedName("alternatives")
  private List<String> alternatives = null;

  public DeprecationNotice reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * The reason for the deprecation
   * @return reason
  **/
  @Schema(description = "The reason for the deprecation")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public DeprecationNotice alternatives(List<String> alternatives) {
    this.alternatives = alternatives;
    return this;
  }

  public DeprecationNotice addAlternativesItem(String alternativesItem) {
    if (this.alternatives == null) {
      this.alternatives = new ArrayList<String>();
    }
    this.alternatives.add(alternativesItem);
    return this;
  }

   /**
   * The alternatives to use
   * @return alternatives
  **/
  @Schema(description = "The alternatives to use")
  public List<String> getAlternatives() {
    return alternatives;
  }

  public void setAlternatives(List<String> alternatives) {
    this.alternatives = alternatives;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeprecationNotice deprecationNotice = (DeprecationNotice) o;
    return Objects.equals(this.reason, deprecationNotice.reason) &&
        Objects.equals(this.alternatives, deprecationNotice.alternatives);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, alternatives);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeprecationNotice {\n");
    
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    alternatives: ").append(toIndentedString(alternatives)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
