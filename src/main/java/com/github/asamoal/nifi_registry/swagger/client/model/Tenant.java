/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi_registry.swagger.client.model.AccessPolicySummary;
import com.github.asamoal.nifi_registry.swagger.client.model.ResourcePermissions;
import com.github.asamoal.nifi_registry.swagger.client.model.RevisionInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Tenant
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T16:35:44.644520+02:00[Europe/Berlin]")
public class Tenant {
  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("identity")
  private String identity = null;

  @SerializedName("configurable")
  private Boolean configurable = null;

  @SerializedName("resourcePermissions")
  private ResourcePermissions resourcePermissions = null;

  @SerializedName("accessPolicies")
  private List<AccessPolicySummary> accessPolicies = null;

  @SerializedName("revision")
  private RevisionInfo revision = null;

   /**
   * The computer-generated identifier of the tenant.
   * @return identifier
  **/
  @Schema(description = "The computer-generated identifier of the tenant.")
  public String getIdentifier() {
    return identifier;
  }

  public Tenant identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * The human-facing identity of the tenant. This can only be changed if the tenant is configurable.
   * @return identity
  **/
  @Schema(required = true, description = "The human-facing identity of the tenant. This can only be changed if the tenant is configurable.")
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }

   /**
   * Indicates if this tenant is configurable, based on which UserGroupProvider has been configured to manage it.
   * @return configurable
  **/
  @Schema(description = "Indicates if this tenant is configurable, based on which UserGroupProvider has been configured to manage it.")
  public Boolean isConfigurable() {
    return configurable;
  }

  public Tenant resourcePermissions(ResourcePermissions resourcePermissions) {
    this.resourcePermissions = resourcePermissions;
    return this;
  }

   /**
   * Get resourcePermissions
   * @return resourcePermissions
  **/
  @Schema(description = "")
  public ResourcePermissions getResourcePermissions() {
    return resourcePermissions;
  }

  public void setResourcePermissions(ResourcePermissions resourcePermissions) {
    this.resourcePermissions = resourcePermissions;
  }

   /**
   * The access policies granted to this tenant.
   * @return accessPolicies
  **/
  @Schema(description = "The access policies granted to this tenant.")
  public List<AccessPolicySummary> getAccessPolicies() {
    return accessPolicies;
  }

  public Tenant revision(RevisionInfo revision) {
    this.revision = revision;
    return this;
  }

   /**
   * Get revision
   * @return revision
  **/
  @Schema(description = "")
  public RevisionInfo getRevision() {
    return revision;
  }

  public void setRevision(RevisionInfo revision) {
    this.revision = revision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tenant tenant = (Tenant) o;
    return Objects.equals(this.identifier, tenant.identifier) &&
        Objects.equals(this.identity, tenant.identity) &&
        Objects.equals(this.configurable, tenant.configurable) &&
        Objects.equals(this.resourcePermissions, tenant.resourcePermissions) &&
        Objects.equals(this.accessPolicies, tenant.accessPolicies) &&
        Objects.equals(this.revision, tenant.revision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, identity, configurable, resourcePermissions, accessPolicies, revision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tenant {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    configurable: ").append(toIndentedString(configurable)).append("\n");
    sb.append("    resourcePermissions: ").append(toIndentedString(resourcePermissions)).append("\n");
    sb.append("    accessPolicies: ").append(toIndentedString(accessPolicies)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
