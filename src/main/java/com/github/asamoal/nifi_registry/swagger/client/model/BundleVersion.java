/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi_registry.swagger.client.model.Bucket;
import com.github.asamoal.nifi_registry.swagger.client.model.BundleVersionDependency;
import com.github.asamoal.nifi_registry.swagger.client.model.BundleVersionMetadata;
import com.github.asamoal.nifi_registry.swagger.client.model.ExtensionBundle;
import com.github.asamoal.nifi_registry.swagger.client.model.JaxbLink;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * BundleVersion
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T14:23:29.468928+02:00[Europe/Berlin]")
public class BundleVersion {
  @SerializedName("link")
  private JaxbLink link = null;

  @SerializedName("versionMetadata")
  private BundleVersionMetadata versionMetadata = null;

  @SerializedName("dependencies")
  private List<BundleVersionDependency> dependencies = null;

  @SerializedName("bundle")
  private ExtensionBundle bundle = null;

  @SerializedName("bucket")
  private Bucket bucket = null;

  @SerializedName("filename")
  private String filename = null;

  public BundleVersion link(JaxbLink link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @Schema(description = "")
  public JaxbLink getLink() {
    return link;
  }

  public void setLink(JaxbLink link) {
    this.link = link;
  }

  public BundleVersion versionMetadata(BundleVersionMetadata versionMetadata) {
    this.versionMetadata = versionMetadata;
    return this;
  }

   /**
   * Get versionMetadata
   * @return versionMetadata
  **/
  @Schema(required = true, description = "")
  public BundleVersionMetadata getVersionMetadata() {
    return versionMetadata;
  }

  public void setVersionMetadata(BundleVersionMetadata versionMetadata) {
    this.versionMetadata = versionMetadata;
  }

   /**
   * The set of other bundle versions that this version is dependent on
   * @return dependencies
  **/
  @Schema(description = "The set of other bundle versions that this version is dependent on")
  public List<BundleVersionDependency> getDependencies() {
    return dependencies;
  }

  public BundleVersion bundle(ExtensionBundle bundle) {
    this.bundle = bundle;
    return this;
  }

   /**
   * Get bundle
   * @return bundle
  **/
  @Schema(description = "")
  public ExtensionBundle getBundle() {
    return bundle;
  }

  public void setBundle(ExtensionBundle bundle) {
    this.bundle = bundle;
  }

  public BundleVersion bucket(Bucket bucket) {
    this.bucket = bucket;
    return this;
  }

   /**
   * Get bucket
   * @return bucket
  **/
  @Schema(description = "")
  public Bucket getBucket() {
    return bucket;
  }

  public void setBucket(Bucket bucket) {
    this.bucket = bucket;
  }

  public BundleVersion filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * Get filename
   * @return filename
  **/
  @Schema(description = "")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BundleVersion bundleVersion = (BundleVersion) o;
    return Objects.equals(this.link, bundleVersion.link) &&
        Objects.equals(this.versionMetadata, bundleVersion.versionMetadata) &&
        Objects.equals(this.dependencies, bundleVersion.dependencies) &&
        Objects.equals(this.bundle, bundleVersion.bundle) &&
        Objects.equals(this.bucket, bundleVersion.bucket) &&
        Objects.equals(this.filename, bundleVersion.filename);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, versionMetadata, dependencies, bundle, bucket, filename);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BundleVersion {\n");
    
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    versionMetadata: ").append(toIndentedString(versionMetadata)).append("\n");
    sb.append("    dependencies: ").append(toIndentedString(dependencies)).append("\n");
    sb.append("    bundle: ").append(toIndentedString(bundle)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
