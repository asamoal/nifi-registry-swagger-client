/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.20.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DefaultSchedule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T16:35:44.644520+02:00[Europe/Berlin]")
public class DefaultSchedule {
  @SerializedName("strategy")
  private String strategy = null;

  @SerializedName("period")
  private String period = null;

  @SerializedName("concurrentTasks")
  private String concurrentTasks = null;

  public DefaultSchedule strategy(String strategy) {
    this.strategy = strategy;
    return this;
  }

   /**
   * The default scheduling strategy
   * @return strategy
  **/
  @Schema(description = "The default scheduling strategy")
  public String getStrategy() {
    return strategy;
  }

  public void setStrategy(String strategy) {
    this.strategy = strategy;
  }

  public DefaultSchedule period(String period) {
    this.period = period;
    return this;
  }

   /**
   * The default scheduling period
   * @return period
  **/
  @Schema(description = "The default scheduling period")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public DefaultSchedule concurrentTasks(String concurrentTasks) {
    this.concurrentTasks = concurrentTasks;
    return this;
  }

   /**
   * The default concurrent tasks
   * @return concurrentTasks
  **/
  @Schema(description = "The default concurrent tasks")
  public String getConcurrentTasks() {
    return concurrentTasks;
  }

  public void setConcurrentTasks(String concurrentTasks) {
    this.concurrentTasks = concurrentTasks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DefaultSchedule defaultSchedule = (DefaultSchedule) o;
    return Objects.equals(this.strategy, defaultSchedule.strategy) &&
        Objects.equals(this.period, defaultSchedule.period) &&
        Objects.equals(this.concurrentTasks, defaultSchedule.concurrentTasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(strategy, period, concurrentTasks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DefaultSchedule {\n");
    
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    concurrentTasks: ").append(toIndentedString(concurrentTasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
