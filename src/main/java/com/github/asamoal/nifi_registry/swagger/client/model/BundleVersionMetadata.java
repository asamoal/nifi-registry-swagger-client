/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.asamoal.nifi_registry.swagger.client.model.BuildInfo;
import com.github.asamoal.nifi_registry.swagger.client.model.JaxbLink;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BundleVersionMetadata
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-04-12T14:23:29.468928+02:00[Europe/Berlin]")
public class BundleVersionMetadata {
  @SerializedName("link")
  private JaxbLink link = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("bundleId")
  private String bundleId = null;

  @SerializedName("bucketId")
  private String bucketId = null;

  @SerializedName("groupId")
  private String groupId = null;

  @SerializedName("artifactId")
  private String artifactId = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("author")
  private String author = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("sha256")
  private String sha256 = null;

  @SerializedName("sha256Supplied")
  private Boolean sha256Supplied = null;

  @SerializedName("contentSize")
  private Long contentSize = null;

  @SerializedName("systemApiVersion")
  private String systemApiVersion = null;

  @SerializedName("buildInfo")
  private BuildInfo buildInfo = null;

  public BundleVersionMetadata link(JaxbLink link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @Schema(description = "")
  public JaxbLink getLink() {
    return link;
  }

  public void setLink(JaxbLink link) {
    this.link = link;
  }

  public BundleVersionMetadata id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of this version of the extension bundle
   * @return id
  **/
  @Schema(description = "The id of this version of the extension bundle")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BundleVersionMetadata bundleId(String bundleId) {
    this.bundleId = bundleId;
    return this;
  }

   /**
   * The id of the extension bundle this version is for
   * @return bundleId
  **/
  @Schema(description = "The id of the extension bundle this version is for")
  public String getBundleId() {
    return bundleId;
  }

  public void setBundleId(String bundleId) {
    this.bundleId = bundleId;
  }

  public BundleVersionMetadata bucketId(String bucketId) {
    this.bucketId = bucketId;
    return this;
  }

   /**
   * The id of the bucket the extension bundle belongs to
   * @return bucketId
  **/
  @Schema(required = true, description = "The id of the bucket the extension bundle belongs to")
  public String getBucketId() {
    return bucketId;
  }

  public void setBucketId(String bucketId) {
    this.bucketId = bucketId;
  }

  public BundleVersionMetadata groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public BundleVersionMetadata artifactId(String artifactId) {
    this.artifactId = artifactId;
    return this;
  }

   /**
   * Get artifactId
   * @return artifactId
  **/
  @Schema(description = "")
  public String getArtifactId() {
    return artifactId;
  }

  public void setArtifactId(String artifactId) {
    this.artifactId = artifactId;
  }

  public BundleVersionMetadata version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the extension bundle
   * @return version
  **/
  @Schema(description = "The version of the extension bundle")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public BundleVersionMetadata timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp of the create date of this version
   * minimum: 1
   * @return timestamp
  **/
  @Schema(description = "The timestamp of the create date of this version")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public BundleVersionMetadata author(String author) {
    this.author = author;
    return this;
  }

   /**
   * The identity that created this version
   * @return author
  **/
  @Schema(description = "The identity that created this version")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public BundleVersionMetadata description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description for this version
   * @return description
  **/
  @Schema(description = "The description for this version")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BundleVersionMetadata sha256(String sha256) {
    this.sha256 = sha256;
    return this;
  }

   /**
   * The hex representation of the SHA-256 digest of the binary content for this version
   * @return sha256
  **/
  @Schema(description = "The hex representation of the SHA-256 digest of the binary content for this version")
  public String getSha256() {
    return sha256;
  }

  public void setSha256(String sha256) {
    this.sha256 = sha256;
  }

  public BundleVersionMetadata sha256Supplied(Boolean sha256Supplied) {
    this.sha256Supplied = sha256Supplied;
    return this;
  }

   /**
   * Whether or not the client supplied a SHA-256 when uploading the bundle
   * @return sha256Supplied
  **/
  @Schema(required = true, description = "Whether or not the client supplied a SHA-256 when uploading the bundle")
  public Boolean isSha256Supplied() {
    return sha256Supplied;
  }

  public void setSha256Supplied(Boolean sha256Supplied) {
    this.sha256Supplied = sha256Supplied;
  }

  public BundleVersionMetadata contentSize(Long contentSize) {
    this.contentSize = contentSize;
    return this;
  }

   /**
   * The size of the binary content for this version in bytes
   * minimum: 0
   * @return contentSize
  **/
  @Schema(required = true, description = "The size of the binary content for this version in bytes")
  public Long getContentSize() {
    return contentSize;
  }

  public void setContentSize(Long contentSize) {
    this.contentSize = contentSize;
  }

  public BundleVersionMetadata systemApiVersion(String systemApiVersion) {
    this.systemApiVersion = systemApiVersion;
    return this;
  }

   /**
   * The version of the system API that this bundle version was built against
   * @return systemApiVersion
  **/
  @Schema(description = "The version of the system API that this bundle version was built against")
  public String getSystemApiVersion() {
    return systemApiVersion;
  }

  public void setSystemApiVersion(String systemApiVersion) {
    this.systemApiVersion = systemApiVersion;
  }

  public BundleVersionMetadata buildInfo(BuildInfo buildInfo) {
    this.buildInfo = buildInfo;
    return this;
  }

   /**
   * Get buildInfo
   * @return buildInfo
  **/
  @Schema(required = true, description = "")
  public BuildInfo getBuildInfo() {
    return buildInfo;
  }

  public void setBuildInfo(BuildInfo buildInfo) {
    this.buildInfo = buildInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BundleVersionMetadata bundleVersionMetadata = (BundleVersionMetadata) o;
    return Objects.equals(this.link, bundleVersionMetadata.link) &&
        Objects.equals(this.id, bundleVersionMetadata.id) &&
        Objects.equals(this.bundleId, bundleVersionMetadata.bundleId) &&
        Objects.equals(this.bucketId, bundleVersionMetadata.bucketId) &&
        Objects.equals(this.groupId, bundleVersionMetadata.groupId) &&
        Objects.equals(this.artifactId, bundleVersionMetadata.artifactId) &&
        Objects.equals(this.version, bundleVersionMetadata.version) &&
        Objects.equals(this.timestamp, bundleVersionMetadata.timestamp) &&
        Objects.equals(this.author, bundleVersionMetadata.author) &&
        Objects.equals(this.description, bundleVersionMetadata.description) &&
        Objects.equals(this.sha256, bundleVersionMetadata.sha256) &&
        Objects.equals(this.sha256Supplied, bundleVersionMetadata.sha256Supplied) &&
        Objects.equals(this.contentSize, bundleVersionMetadata.contentSize) &&
        Objects.equals(this.systemApiVersion, bundleVersionMetadata.systemApiVersion) &&
        Objects.equals(this.buildInfo, bundleVersionMetadata.buildInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, id, bundleId, bucketId, groupId, artifactId, version, timestamp, author, description, sha256, sha256Supplied, contentSize, systemApiVersion, buildInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BundleVersionMetadata {\n");
    
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bundleId: ").append(toIndentedString(bundleId)).append("\n");
    sb.append("    bucketId: ").append(toIndentedString(bucketId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    artifactId: ").append(toIndentedString(artifactId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sha256: ").append(toIndentedString(sha256)).append("\n");
    sb.append("    sha256Supplied: ").append(toIndentedString(sha256Supplied)).append("\n");
    sb.append("    contentSize: ").append(toIndentedString(contentSize)).append("\n");
    sb.append("    systemApiVersion: ").append(toIndentedString(systemApiVersion)).append("\n");
    sb.append("    buildInfo: ").append(toIndentedString(buildInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
