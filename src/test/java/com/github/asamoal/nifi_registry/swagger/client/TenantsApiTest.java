/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client;

import com.github.asamoal.nifi_registry.swagger.client.model.User;
import com.github.asamoal.nifi_registry.swagger.client.model.UserGroup;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TenantsApi
 */
@Ignore
public class TenantsApiTest {

    private final TenantsApi api = new TenantsApi();

    /**
     * Create user
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws Exception {
        User body = null;
        User response = api.createUser(body);

        // TODO: test validations
    }
    /**
     * Create user group
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createUserGroupTest() throws Exception {
        UserGroup body = null;
        UserGroup response = api.createUserGroup(body);

        // TODO: test validations
    }
    /**
     * Get user
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws Exception {
        String id = null;
        User response = api.getUser(id);

        // TODO: test validations
    }
    /**
     * Get user group
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserGroupTest() throws Exception {
        String id = null;
        UserGroup response = api.getUserGroup(id);

        // TODO: test validations
    }
    /**
     * Get user groups
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserGroupsTest() throws Exception {
        List<UserGroup> response = api.getUserGroups();

        // TODO: test validations
    }
    /**
     * Get all users
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws Exception {
        List<User> response = api.getUsers();

        // TODO: test validations
    }
    /**
     * Delete user
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeUserTest() throws Exception {
        String version = null;
        String id = null;
        String clientId = null;
        User response = api.removeUser(version, id, clientId);

        // TODO: test validations
    }
    /**
     * Delete user group
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeUserGroupTest() throws Exception {
        String version = null;
        String id = null;
        String clientId = null;
        UserGroup response = api.removeUserGroup(version, id, clientId);

        // TODO: test validations
    }
    /**
     * Update user
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws Exception {
        User body = null;
        String id = null;
        User response = api.updateUser(body, id);

        // TODO: test validations
    }
    /**
     * Update user group
     *
     *   NOTE: This endpoint is subject to change as NiFi Registry and its REST API evolve.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserGroupTest() throws Exception {
        UserGroup body = null;
        String id = null;
        UserGroup response = api.updateUserGroup(body, id);

        // TODO: test validations
    }
}
