/*
 * Apache NiFi Registry REST API
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.asamoal.nifi_registry.swagger.client;

import com.github.asamoal.nifi_registry.swagger.client.model.AccessPolicy;
import com.github.asamoal.nifi_registry.swagger.client.model.Resource;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for PoliciesApi
 */
@Ignore
public class PoliciesApiTest {

    private final PoliciesApi api = new PoliciesApi();

    /**
     * Create access policy
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAccessPolicyTest() throws Exception {
        AccessPolicy body = null;
        AccessPolicy response = api.createAccessPolicy(body);

        // TODO: test validations
    }
    /**
     * Get all access policies
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccessPoliciesTest() throws Exception {
        List<AccessPolicy> response = api.getAccessPolicies();

        // TODO: test validations
    }
    /**
     * Get access policy
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccessPolicyTest() throws Exception {
        String id = null;
        AccessPolicy response = api.getAccessPolicy(id);

        // TODO: test validations
    }
    /**
     * Get access policy for resource
     *
     * Gets an access policy for the specified action and resource
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccessPolicyForResourceTest() throws Exception {
        String action = null;
        String resource = null;
        AccessPolicy response = api.getAccessPolicyForResource(action, resource);

        // TODO: test validations
    }
    /**
     * Get available resources
     *
     * Gets the available resources that support access/authorization policies
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getResourcesTest() throws Exception {
        List<Resource> response = api.getResources();

        // TODO: test validations
    }
    /**
     * Delete access policy
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeAccessPolicyTest() throws Exception {
        String version = null;
        String id = null;
        String clientId = null;
        AccessPolicy response = api.removeAccessPolicy(version, id, clientId);

        // TODO: test validations
    }
    /**
     * Update access policy
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateAccessPolicyTest() throws Exception {
        AccessPolicy body = null;
        String id = null;
        AccessPolicy response = api.updateAccessPolicy(body, id);

        // TODO: test validations
    }
}
